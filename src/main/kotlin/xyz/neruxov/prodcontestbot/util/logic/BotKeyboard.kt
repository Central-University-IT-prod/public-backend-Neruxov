package xyz.neruxov.prodcontestbot.util.logic

import com.pengrad.telegrambot.TelegramBot
import com.pengrad.telegrambot.model.request.*
import com.pengrad.telegrambot.request.DeleteMessage
import com.pengrad.telegrambot.request.SendMessage
import xyz.neruxov.prodcontestbot.data.notes.enums.NoteVisibility
import xyz.neruxov.prodcontestbot.data.trip.model.TripCity

/**
 * @author <a href="https://github.com/Neruxov">Neruxov</a>
 */
enum class BotKeyboard(
    open val keyboard: Keyboard
) {
    MAIN_MENU(
        InlineKeyboardMarkup(
            arrayOf(
                InlineKeyboardButton("‚úàÔ∏è –ù–æ–≤–∞—è –ø–æ–µ–∑–¥–∫–∞")
                    .callbackData("new_trip"),
            ),
            arrayOf(
                InlineKeyboardButton("üìÖ –ú–æ–∏ –ø–æ–µ–∑–¥–∫–∏")
                    .callbackData("my_trips")
            ),
            arrayOf(
                InlineKeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å")
                    .callbackData("profile"),
            ),
        )
    ),
    TRIP_CONFIRM_LOCATIONS(
        InlineKeyboardMarkup(
            arrayOf(
                InlineKeyboardButton("‚úÖ")
                    .callbackData("yes"),
                InlineKeyboardButton("‚ùå")
                    .callbackData("remove_last")
            )
        )
    ),
    TO_MAIN_MENU(
        InlineKeyboardMarkup(
            arrayOf(
                InlineKeyboardButton("‚¨ÖÔ∏è")
                    .callbackData("main_menu")
            )
        )
    ),
    TO_MY_TRIPS(
        InlineKeyboardMarkup(
            arrayOf(
                InlineKeyboardButton("‚¨ÖÔ∏è")
                    .callbackData("my_trips")
            )
        )
    ),
    TO_PROFILE(
        InlineKeyboardMarkup(
            arrayOf(
                InlineKeyboardButton("‚¨ÖÔ∏è")
                    .callbackData("profile")
            )
        )
    ),
    PROFILE(
        InlineKeyboardMarkup(
            arrayOf(
                InlineKeyboardButton("üåÜ –ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥")
                    .callbackData("profile_change_city"),
            ),
            arrayOf(
                InlineKeyboardButton("üë∂ –ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç")
                    .callbackData("profile_change_age"),
            ),
            arrayOf(
                InlineKeyboardButton("üìÉ –ò–∑–º–µ–Ω–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é")
                    .callbackData("profile_change_bio"),
            ),
            arrayOf(
                InlineKeyboardButton("‚¨ÖÔ∏è")
                    .callbackData("main_menu"),
            ),
        )
    ),
    CONFIRM_INLINE(
        InlineKeyboardMarkup(
            arrayOf(
                InlineKeyboardButton("‚úÖ")
                    .callbackData("yes"),
                InlineKeyboardButton("‚ùå")
                    .callbackData("no")
            )
        )
    ),
    SKIP_REPLY(
        ReplyKeyboardMarkup(
            arrayOf(
                KeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
            )
        )
    ),
    SHARE_LOCATION(
        ReplyKeyboardMarkup(
            arrayOf(
                KeyboardButton("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ª–æ–∫–∞—Ü–∏–µ–π üìç")
                    .requestLocation(true)
            )
        )
    ),
    CANCEL(
        InlineKeyboardMarkup(
            arrayOf(
                InlineKeyboardButton("‚ùå")
                    .callbackData("cancel")
            )
        )
    ),
    REMOVE_KEYBOARD(
        ReplyKeyboardRemove()
    );

    companion object {

        fun getMyTripsKeyboard(tripIds: List<Int>, archive: Boolean): InlineKeyboardMarkup {
            val buttons = mutableListOf<InlineKeyboardButton>()
            for ((i, trip) in tripIds.withIndex()) {
                buttons.add(
                    InlineKeyboardButton(EmojiUtil.getCountEmoji(i + 1))
                        .callbackData("trip_$trip")
                )
            }

            return InlineKeyboardMarkup(
                buttons.toTypedArray(),
                arrayOf(
                    InlineKeyboardButton("‚óÄÔ∏è")
                        .callbackData("trip" + if (archive) "_archive_" else "_" + "prev"),
                    InlineKeyboardButton("‚ñ∂Ô∏è")
                        .callbackData("trip" + if (archive) "_archive_" else "_" + "next")
                ),
                if (archive) emptyArray() else arrayOf(
                    InlineKeyboardButton("‚úàÔ∏è –ù–æ–≤–∞—è –ø–æ–µ–∑–¥–∫–∞")
                        .callbackData("new_trip"),
                ),
                if (archive) emptyArray() else arrayOf(
                    InlineKeyboardButton("üìö –ê—Ä—Ö–∏–≤ –ø–æ–µ–∑–¥–æ–∫")
                        .callbackData("trip_archive")
                ),
                arrayOf(
                    InlineKeyboardButton("‚¨ÖÔ∏è")
                        .callbackData(if (archive) "my_trips" else "main_menu")
                )
            )
        }

        fun getShareUser(requestId: Int): ReplyKeyboardMarkup {
            return ReplyKeyboardMarkup(
                arrayOf(
                    KeyboardButton("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º üìû")
                        .requestUser(KeyboardButtonRequestUser(requestId))
                )
            )
        }

        fun getBackToCompanionMenu(tripId: Long): InlineKeyboardMarkup {
            return InlineKeyboardMarkup(
                arrayOf(
                    InlineKeyboardButton("‚óÄÔ∏è")
                        .callbackData("trip_$tripId"),
                ),
            )
        }

        fun getManageCompanions(tripId: Long): InlineKeyboardMarkup {
            return InlineKeyboardMarkup(
                arrayOf(
                    InlineKeyboardButton("üë§ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ø–æ–ø—É—Ç—á–∏–∫–∞")
                        .callbackData("trip_companion_invite_$tripId"),
                ),
                arrayOf(
                    InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–ø—É—Ç—á–∏–∫–∞")
                        .callbackData("trip_companion_remove_$tripId"),
                ),
                arrayOf(
                    InlineKeyboardButton("‚óÄÔ∏è")
                        .callbackData("trip_$tripId"),
                ),
            )
        }

        fun getManageTrip(tripId: Long, creator: Boolean, archive: Boolean): InlineKeyboardMarkup {
            if (!creator)
                return InlineKeyboardMarkup(
                    arrayOf(
                        InlineKeyboardButton("üìí –ó–∞–º–µ—Ç–∫–∏")
                            .callbackData("trip_notes_$tripId"),
                    ),
                    arrayOf(
                        InlineKeyboardButton("‚òÅÔ∏è –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã")
                            .callbackData("trip_weather_$tripId")
                    ),
                    arrayOf(
                        InlineKeyboardButton("‚¨ÖÔ∏è")
                            .callbackData("my_trips")
                    )
                )

            return InlineKeyboardMarkup(
                if (archive) emptyArray() else arrayOf(
                    InlineKeyboardButton("üë• –ü–æ–ø—É—Ç—á–∏–∫–∏")
                        .callbackData("trip_companions_$tripId"),
                ),
                if (archive) emptyArray() else arrayOf(
                    InlineKeyboardButton("‚òÅÔ∏è –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã")
                        .callbackData("trip_weather_$tripId")
                ),
                if (archive) emptyArray() else arrayOf(
                    InlineKeyboardButton("ü¶Æ –ì–∏–¥ –≤ –ø–æ–µ–∑–¥–∫–µ")
                        .callbackData("trip_guide_$tripId"),
                ),
                arrayOf(
                    InlineKeyboardButton("üìí –ó–∞–º–µ—Ç–∫–∏")
                        .callbackData("trip_notes_$tripId"),
                ),
                if (archive) emptyArray() else arrayOf(
                    InlineKeyboardButton("‚úèÔ∏è")
                        .callbackData("trip_edit_$tripId"),
                    InlineKeyboardButton("üóëÔ∏è")
                        .callbackData("trip_archive_$tripId")
                ),
                arrayOf(
                    InlineKeyboardButton("‚¨ÖÔ∏è")
                        .callbackData("my_trips")
                )
            )
        }

        fun removeKeyboard(userId: Long, bot: TelegramBot) {
            val msg = bot.execute(
                SendMessage(userId, "ü§™")
                    .replyMarkup(REMOVE_KEYBOARD.keyboard)
            ).message()

            bot.execute(DeleteMessage(userId, msg.messageId()))
        }

        fun getToManageTrip(tripId: Long): InlineKeyboardMarkup {
            return InlineKeyboardMarkup(
                arrayOf(
                    InlineKeyboardButton("‚¨ÖÔ∏è")
                        .callbackData("trip_$tripId"),
                ),
            )
        }

        fun getToEditTrip(tripId: Long): InlineKeyboardMarkup {
            return InlineKeyboardMarkup(
                arrayOf(
                    InlineKeyboardButton("‚¨ÖÔ∏è")
                        .callbackData("trip_edit_$tripId"),
                ),
            )
        }

        fun getSelectCity(tripId: Long, cities: List<TripCity>, back: String = "trip_edit"): InlineKeyboardMarkup {
            val cityRows = mutableListOf<List<InlineKeyboardButton>>()
            val citiesPerRow = 3

            cities.chunked(citiesPerRow).forEachIndexed { chunkIndex, chunk ->
                val buttons = chunk.mapIndexed { index, city ->
                    val emoji = EmojiUtil.getCountEmoji(chunkIndex * citiesPerRow + index + 1)
                    InlineKeyboardButton(emoji).callbackData("trip_city_${tripId}_${city.id}")
                }

                cityRows.add(buttons)
            }

            val inlineKeyboardMarkup = InlineKeyboardMarkup(
                *cityRows.map { it.toTypedArray() }.toTypedArray(),
                arrayOf(
                    InlineKeyboardButton("‚¨ÖÔ∏è")
                        .callbackData("${back}_$tripId"),
                ),
            )

            return inlineKeyboardMarkup
        }

        fun getEditMenu(tripId: Long): InlineKeyboardMarkup {
            return InlineKeyboardMarkup(
                arrayOf(
                    InlineKeyboardButton("üìÖ –£–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É")
                        .callbackData("trip_edit_leaving_date_$tripId"),
                ),
                arrayOf(
                    InlineKeyboardButton("üèôÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥")
                        .callbackData("trip_edit_add_city_$tripId"),
                ),
                arrayOf(
                    InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≥–æ—Ä–æ–¥")
                        .callbackData("trip_edit_remove_city_$tripId"),
                ),
                arrayOf(
                    InlineKeyboardButton("‚¨ÖÔ∏è")
                        .callbackData("trip_$tripId"),
                ),
            )
        }

        fun getNotesMenu(tripId: Long, noteIds: List<Long>, archive: Boolean): InlineKeyboardMarkup {
            val buttons = mutableListOf<InlineKeyboardButton>()
            for ((i, trip) in noteIds.withIndex()) {
                buttons.add(
                    InlineKeyboardButton(EmojiUtil.getCountEmoji(i + 1))
                        .callbackData("trip_note_$trip")
                )
            }

            return InlineKeyboardMarkup(
                buttons.toTypedArray(),
                arrayOf(
                    InlineKeyboardButton("‚óÄÔ∏è")
                        .callbackData("trip_notes_prev"),
                    InlineKeyboardButton("‚ñ∂Ô∏è")
                        .callbackData("trip_notes_next")
                ),
                if (archive) emptyArray() else arrayOf(
                    InlineKeyboardButton("üìù –î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É")
                        .callbackData("trip_notes_new_$tripId"),
                ),
                arrayOf(
                    InlineKeyboardButton("‚¨ÖÔ∏è")
                        .callbackData("trip_$tripId"),
                ),
            )
        }

        fun getNoteMenu(
            noteId: Long,
            tripId: Long,
            visibility: NoteVisibility,
            isOwner: Boolean,
            archive: Boolean
        ): InlineKeyboardMarkup {
            if (isOwner && !archive)
                return InlineKeyboardMarkup(
                    arrayOf(
                        InlineKeyboardButton("${visibility.emoji} ${visibility.displayName}")
                            .callbackData("trip_note_visibility_$noteId"),
                    ),
                    arrayOf(
                        InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")
                            .callbackData("trip_note_edit_$noteId"),
                    ),
                    arrayOf(
                        InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å")
                            .callbackData("trip_note_remove_$noteId"),
                    ),
                    arrayOf(
                        InlineKeyboardButton("‚¨ÖÔ∏è")
                            .callbackData("trip_notes_$tripId"),
                    ),
                )

            return InlineKeyboardMarkup(
                arrayOf(
                    InlineKeyboardButton("‚¨ÖÔ∏è")
                        .callbackData("trip_notes_$tripId"),
                ),
            )
        }

        fun getToNotes(tripId: Long): InlineKeyboardMarkup {
            return InlineKeyboardMarkup(
                arrayOf(
                    InlineKeyboardButton("‚¨ÖÔ∏è")
                        .callbackData("trip_notes_$tripId"),
                ),
            )
        }

        fun getWeatherKeyboard(tripId: Long): InlineKeyboardMarkup {
            return InlineKeyboardMarkup(
                arrayOf(
                    InlineKeyboardButton("‚óÄÔ∏è")
                        .callbackData("trip_weather_prev_$tripId"),
                    InlineKeyboardButton("‚ñ∂Ô∏è")
                        .callbackData("trip_weather_next_$tripId")
                ),
                arrayOf(
                    InlineKeyboardButton("‚¨ÖÔ∏è")
                        .callbackData("trip_$tripId"),
                ),
            )
        }

        fun getLandmarksMenu(tripId: Long, isAbove18: Boolean): InlineKeyboardMarkup {
            return InlineKeyboardMarkup(
                arrayOf(
                    InlineKeyboardButton("üèõÔ∏è –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã")
                        .callbackData("trip_cultural_$tripId"),
                ),
                arrayOf(
                    InlineKeyboardButton("üé¢ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è")
                        .callbackData("trip_amusements_$tripId"),
                ),
                arrayOf(
                    InlineKeyboardButton("üè® –ñ–∏–ª—å–µ")
                        .callbackData("trip_accomodations_$tripId"),
                ),
                arrayOf(
                    InlineKeyboardButton("üçΩÔ∏è –ï–¥–∞")
                        .callbackData("trip_foods_$tripId"),
                ),
                arrayOf(
                    InlineKeyboardButton("üõí –ú–∞–≥–∞–∑–∏–Ω—ã")
                        .callbackData("trip_shops_$tripId"),
                ),
                if (isAbove18) arrayOf(
                    InlineKeyboardButton("üîû –î–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö")
                        .callbackData("trip_adult_$tripId"),
                ) else emptyArray(),
                arrayOf(
                    InlineKeyboardButton("‚¨ÖÔ∏è")
                        .callbackData("trip_city_guide_$tripId"),
                ),
            )
        }

        fun getBackToLandmarksMenu(tripId: Long): InlineKeyboardMarkup {
            return InlineKeyboardMarkup(
                arrayOf(
                    InlineKeyboardButton("‚¨ÖÔ∏è")
                        .callbackData("trip_city_guide_$tripId"),
                ),
            )
        }

        fun getBackToLandmarksMenuForCity(tripId: Long, cityId: Long): InlineKeyboardMarkup {
            return InlineKeyboardMarkup(
                arrayOf(
                    InlineKeyboardButton("‚¨ÖÔ∏è")
                        .callbackData("trip_city_${tripId}_$cityId"),
                ),
            )
        }

        fun getGuideMenu(tripId: Long): InlineKeyboardMarkup {
            return InlineKeyboardMarkup(
                arrayOf(
                    InlineKeyboardButton("üîé –ß—Ç–æ –ø–æ—Å–µ—Ç–∏—Ç—å?")
                        .callbackData("trip_city_guide_$tripId"),
                ),
                arrayOf(
                    InlineKeyboardButton("‚¨ÖÔ∏è")
                        .callbackData("trip_$tripId"),
                ),
            )
        }

    }

}